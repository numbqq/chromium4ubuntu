Fix constexpr breakage of the following form, observed on jammy:

  (various): error: constexpr function's return type 'std::string' (aka 'basic_string<char>') is not a literal type

--- a/chrome/browser/ui/webui/commerce/shopping_insights_side_panel_ui.h
+++ b/chrome/browser/ui/webui/commerce/shopping_insights_side_panel_ui.h
@@ -56,7 +56,7 @@ class ShoppingInsightsSidePanelUI
       mojo::PendingReceiver<
           shopping_service::mojom::ShoppingServiceHandlerFactory> receiver);
 
-  static constexpr std::string GetWebUIName() {
+  static const std::string GetWebUIName() {
     return "ShoppingInsightsSidePanel";
   }
 
--- a/chrome/browser/ui/webui/compose/compose_untrusted_ui.h
+++ b/chrome/browser/ui/webui/compose/compose_untrusted_ui.h
@@ -58,7 +58,7 @@ class ComposeUntrustedUI
     triggering_web_contents_ = web_contents->GetWeakPtr();
   }
 
-  static constexpr std::string GetWebUIName() { return "Compose"; }
+  static const std::string GetWebUIName() { return "Compose"; }
 
  private:
   void CreateComposeSessionUntrustedPageHandler(
--- a/chrome/browser/ui/lens/lens_untrusted_ui.h
+++ b/chrome/browser/ui/lens/lens_untrusted_ui.h
@@ -47,7 +47,7 @@ class LensUntrustedUI : public Untrusted
       mojo::PendingReceiver<color_change_listener::mojom::PageHandler>
           receiver);
 
-  static constexpr std::string GetWebUIName() { return "LensUntrusted"; }
+  static const std::string GetWebUIName() { return "LensUntrusted"; }
 
  private:
   // lens::mojom::LensPageHandlerFactory:
--- a/chrome/browser/ui/lens/search_bubble_ui.h
+++ b/chrome/browser/ui/lens/search_bubble_ui.h
@@ -42,7 +42,7 @@ class SearchBubbleUI : public TopChromeW
       mojo::PendingReceiver<color_change_listener::mojom::PageHandler>
           receiver);
 
-  static constexpr std::string GetWebUIName() { return "LensSearchBubble"; }
+  static const std::string GetWebUIName() { return "LensSearchBubble"; }
 
  private:
   // lens::mojom::SearchBubblePageHandlerFactory
--- a/chrome/browser/ui/webui/side_panel/bookmarks/bookmarks_side_panel_ui.h
+++ b/chrome/browser/ui/webui/side_panel/bookmarks/bookmarks_side_panel_ui.h
@@ -78,7 +78,7 @@ class BookmarksSidePanelUI
   commerce::ShoppingListContextMenuController*
   GetShoppingListContextMenuController();
 
-  static constexpr std::string GetWebUIName() { return "BookmarksSidePanel"; }
+  static const std::string GetWebUIName() { return "BookmarksSidePanel"; }
 
  private:
   // side_panel::mojom::BookmarksPageHandlerFactory:
--- a/chrome/browser/ui/webui/side_panel/companion/companion_side_panel_untrusted_ui.h
+++ b/chrome/browser/ui/webui/side_panel/companion/companion_side_panel_untrusted_ui.h
@@ -34,7 +34,7 @@ class CompanionSidePanelUntrustedUI
   // Gets a weak pointer to this object.
   base::WeakPtr<CompanionSidePanelUntrustedUI> GetWeakPtr();
 
-  static constexpr std::string GetWebUIName() {
+  static const std::string GetWebUIName() {
     return "CompanionSidePanelUntrusted";
   }
 
--- a/chrome/browser/ui/webui/side_panel/customize_chrome/customize_chrome_ui.h
+++ b/chrome/browser/ui/webui/side_panel/customize_chrome/customize_chrome_ui.h
@@ -121,7 +121,7 @@ class CustomizeChromeUI
           side_panel::customize_chrome::mojom::CustomizeToolbarHandlerFactory>
           receiver);
 
-  static constexpr std::string GetWebUIName() { return "CustomizeChrome"; }
+  static const std::string GetWebUIName() { return "CustomizeChrome"; }
 
  private:
   // side_panel::mojom::CustomizeChromePageHandlerFactory
--- a/chrome/browser/ui/webui/side_panel/history_clusters/history_clusters_side_panel_ui.h
+++ b/chrome/browser/ui/webui/side_panel/history_clusters/history_clusters_side_panel_ui.h
@@ -91,7 +91,7 @@ class HistoryClustersSidePanelUI : publi
       content::NavigationHandle* navigation_handle) override;
   void OnVisibilityChanged(content::Visibility visibility) override;
 
-  static constexpr std::string GetWebUIName() {
+  static const std::string GetWebUIName() {
     return "HistoryClustersSidePanel";
   }
 
--- a/chrome/browser/ui/webui/side_panel/read_anything/read_anything_untrusted_ui.h
+++ b/chrome/browser/ui/webui/side_panel/read_anything/read_anything_untrusted_ui.h
@@ -51,7 +51,7 @@ class ReadAnythingUntrustedUI
       mojo::PendingReceiver<read_anything::mojom::UntrustedPageHandlerFactory>
           receiver);
 
-  static constexpr std::string GetWebUIName() {
+  static const std::string GetWebUIName() {
     return "ReadAnythingUntrusted";
   }
 
--- a/chrome/browser/ui/webui/side_panel/reading_list/reading_list_ui.h
+++ b/chrome/browser/ui/webui/side_panel/reading_list/reading_list_ui.h
@@ -58,7 +58,7 @@ class ReadingListUI : public TopChromeWe
 
   void SetActiveTabURL(const GURL& url);
 
-  static constexpr std::string GetWebUIName() { return "ReadingList"; }
+  static const std::string GetWebUIName() { return "ReadingList"; }
 
  private:
   // reading_list::mojom::PageHandlerFactory:
--- a/chrome/browser/ui/webui/tab_search/tab_search_ui.h
+++ b/chrome/browser/ui/webui/tab_search/tab_search_ui.h
@@ -62,7 +62,7 @@ class TabSearchUI : public TopChromeWebU
     return page_handler_.get();
   }
 
-  static constexpr std::string GetWebUIName() { return "TabSearch"; }
+  static const std::string GetWebUIName() { return "TabSearch"; }
 
   void set_page_handler_creation_callback_for_testing(
       base::OnceClosure callback) {
